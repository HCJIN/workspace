CREATE TABLE HOSPITAL_MEMBER(
  MEM_NUM INT AUTO_INCREMENT PRIMARY KEY
  , MEM_ID VARCHAR(50) NOT NULL
  , MEM_PW VARCHAR(50) NOT NULL
  , MEM_NAME VARCHAR(30) NOT NULL
  , MEM_TEL VARCHAR(30) UNIQUE
  , MEM_ROLE VARCHAR(30) DEFAULT 'USER'
  , HOSPITAL_CODE VARCHAR(30) DEFAULT 'H4' -- 환자 : h4, 의사 : 진료과에 맞는 코드 선정
  , GENDER VARCHAR(10) NOT NULL
  , BIRTHDAY VARCHAR(40) NOT NULL
  , EMAIL VARCHAR(50) NOT NULL
);

CREATE TABLE HOSPITAL_RESERVATION (
   RES_NUM INT AUTO_INCREMENT PRIMARY KEY,
   RES_DATE DATE NOT NULL,              -- 예약 날짜
   RES_TIME TIME NOT NULL,              -- 예약 시간
   SERVICE_TYPE VARCHAR(50),            -- 증상
   DISEASE VARCHAR(50),                                          -- 병명        
  	SURGERY VARCHAR(30) DEFAULT 'X' ,    -- 수술 여부
  	STATUS VARCHAR(20) DEFAULT '예약됨', -- 예약 상태 (예: 예약됨, 완료, 취소됨 등)
   MEM_NUM INT NOT NULL REFERENCES hospital_member(MEM_NUM) ON DELETE CASCADE -- 예약한 회원의 번호
);

CREATE TABLE service_board(
     BOARD_NUM INT AUTO_INCREMENT PRIMARY KEY
     ,BOARD_TITLE VARCHAR(200) NOT NULL
     ,BOARD_CONTENT VARCHAR(500) NOT NULL
     ,CREATE_DATE DATETIME DEFAULT CURRENT_TIMESTAMP    
	  ,MEM_NUM INT REFERENCES hospital_member(MEM_NUM) ON DELETE CASCADE            
);



DROP TABLE hospital_member;
DROP TABLE hospital_reservation;
DROP TABLE service_board;

SELECT * FROM hospital_member;

SELECT * FROM hospital_reservation;

SELECT * FROM SERVICE_BOARD;

INSERT INTO hospital_member (MEM_ID,MEM_PW,MEM_NAME,MEM_ADDR,ADDR_DETAIL,MEM_TEL,POST,
MEM_ROLE,H_CODE,GENDER,BIRTHDAY,EMAIL) VALUES
(
	'fdskek',
	'12345678',
	'자자자반',
	'울산시',
	'123-1',
	'010-2222-3333',
	'44545',
	'USER',
	'H4',
	'남',
	'1995-04-27',
	'fdskek@naver.com'
);

DELETE FROM hospital_member WHERE MEM_NUM >= 1;
DELETE FROM hospital_reservation;

-- 상품 카테고리 테이블
CREATE TABLE ITEM_CATEGORY(
	CATE_CODE INT AUTO_INCREMENT PRIMARY KEY
	, CATE_NAME VARCHAR(50) NOT NULL UNIQUE
);

INSERT INTO item_category VALUES(1, '전문의약품');
INSERT INTO item_category VALUES(2, '수술관련기기');
INSERT INTO item_category VALUES(3, '멸균기');
INSERT INTO item_category VALUES(4, '폐활량계,심전계');

SELECT * FROM ITEM_CATEGORY;

-- 상품 정보 테이블
-- ITEM_STATUS(상품 상태) : FOR_SALE(판매중), SOLD_OUT(매진)
CREATE TABLE SHOP_ITEM(
	ITEM_CODE INT AUTO_INCREMENT PRIMARY KEY
	,	ITEM_NAME VARCHAR(50) NOT NULL UNIQUE
	,	ITEM_PRICE INT NOT NULL
	,	ITEM_INTRO VARCHAR(100)
	,	ITEM_STOCK INT DEFAULT 20
	,	ITEM_STATUS VARCHAR(10) DEFAULT 'FOR_SALE'
	,	CATE_CODE INT NOT NULL REFERENCES item_category (CATE_CODE)
);

SELECT * FROM shop_item;
DELETE FROM shop_item;

-- 상품 이미지 정보 테이블
-- ORIGIN_FILE_NAME : 원본 파일명
-- ATTACHED_FILE_NAME : 첨부된 파일명
-- IS_MAIN : 대표 이미지 여부 (Y, N)
CREATE TABLE ITEM_IMG (
	IMG_CODE INT AUTO_INCREMENT PRIMARY KEY
	,	ORIGIN_FILE_NAME VARCHAR(100) NOT NULL
	,	ATTACHED_FILE_NAME VARCHAR(100) NOT NULL
	,	IS_MAIN VARCHAR(5) NOT NULL
	,	ITEM_CODE INT NOT NULL REFERENCES shop_item (ITEM_CODE) ON DELETE CASCADE
);

SELECT * FROM item_img;

CREATE TABLE test_SHOP_item (
	ITEM_CODE INT AUTO_INCREMENT PRIMARY KEY
	, ITEM_NAME VARCHAR(50)
);

SELECT * FROM test_shop_item;

-- 장바구니 정보 테이블
CREATE TABLE SHOP_CART (
	CART_CODE INT AUTO_INCREMENT PRIMARY KEY,
	ITEM_CODE INT,
	CART_CNT INT NOT NULL,
	MEM_NUM INT,
	CART_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT fk_cart_item FOREIGN KEY (ITEM_CODE) REFERENCES SHOP_ITEM (ITEM_CODE),
	CONSTRAINT fk_cart_member FOREIGN KEY (MEM_NUM) REFERENCES HOSPITAL_MEMBER (MEM_NUM)
);



